---
- name: Prepare Etsin Qvain data servers
  hosts: etsinqvaindataservers
  remote_user: '{{ deployer }}'
  roles:
  - role: fairdata-ansible-python
    vars:
      install_method: '{{ fairdata_python_install_method | default("none") }}'
      version: '{{ fairdata_python_version | default("3.6.8") }}'
      minor_version: '{{ fairdata_python_minor_version | default("3.6") }}'
      python_executable: '{{ fairdata_python_python_executable | default("python3") }}'
      rpm_src: '{{ fairdata_python_rpm_src | default("") }}'
      rpm_dest: '{{ fairdata_python_rpm_dest | default("") }}'

  # Custom forked role for installation of ElasticSearch v5.6.11, available at https://github.com/CSCfi/ansible-elasticsearch
  - role: ansible-elasticsearch-old-csc-forked-version
    vars:
      es_instance_name: "{{ elasticsearch_instance.node_name }}"
      es_heap_size: '{{ elasticsearch_heap_size | default("256m")}}'
      es_version: "5.6.11"
      es_custom_package_url: "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.11.rpm"
      es_use_repository: false
      es_major_version: "5.x"
      es_version_lock: true
      es_xpack_features: []
      es_config:
        bootstrap.memory_lock: true
        node.name: "{{ elasticsearch_instance.node_name }}"
        cluster.name: '{{ elasticsearch_instance.cluster_name | default("etsin-es-cluster") }}'
        node.data: true
        node.master: true
        http.cors.enabled : true
        http.cors.allow-origin : "https://{{ deployment_etsin_fqdn }}"
        http.cors.allow-methods : "OPTIONS, HEAD, GET, POST, PUT, DELETE"
        http.cors.allow-headers : "X-Requested-With,X-Auth-Token,Content-Type,Content-Length"
        network.host: [_local_, "{{ dataserver_1_internal_ip }}"]
        http.port: "{{ elasticsearch_http_port | default(9200) }}"
        discovery.zen.ping.unicast.hosts: "{{ elasticsearch_instance.discovery_hosts | default('[\"127.0.0.1\", \"[::1]\"]') }}"
        transport.tcp.port: "{{ elasticsearch_transport_port | default('9300') }}"
        discovery.zen.minimum_master_nodes: "{{ elasticsearch_instance.min_master_nodes | default('1') }}"
        indices.query.bool.max_clause_count: 10000

  # The below code (commented away) is tested as functional.
  # These rows can be enabled again when/if upgrading to ElasticSearch version 6+
  # Currently using ElasticSearch v5.6.11
  # -------------------------------------
  # - role: ansible-elasticsearch
  #   vars:
  #     es_api_port: '{{ elasticsearch_http_port | default(9200) }}'
  #     es_instance_name: "{{ elasticsearch_instance.node_name }}"
  #     es_config:
  #       bootstrap.memory_lock: true
  #       cluster.name: '{{ elasticsearch_cluster_name | default("etsin-es-cluster") }}'
  #       network.host: [_local_, "{{ dataserver_1_internal_ip }}"]
  #       http.port: '{{ elasticsearch_http_port | default(9200) }}'
  #       http.cors.enabled : true
  #       http.cors.allow-origin : "https://{{ deployment_etsin_fqdn }}"
  #       http.cors.allow-methods : "OPTIONS, HEAD, GET, POST, PUT, DELETE"
  #       http.cors.allow-headers : "X-Requested-With,X-Auth-Token,Content-Type,Content-Length"
  #       node.data: true
  #       node.master: true
  #       node.name: '{{ elasticsearch_node_name | default("node1") }}'
  #       transport.tcp.port: '{{ elasticsearch_transport_port | default(9300) }}'
  #       discovery.zen.ping.unicast.hosts: "{{ elasticsearch_instance.discovery_hosts | default('[\"127.0.0.1\", \"[::1]\"]') }}"
  #       discovery.zen.minimum_master_nodes: "{{ elasticsearch_instance.min_master_nodes | default('1') }}"
  #       indices.query.bool.max_clause_count: 10000
  #     es_heap_size: '{{ elasticsearch_heap_size | default("256m")}}'
  #     es_use_repository: true
  #     es_version: '{{ elasticsearch_version | default("6.5.2") }}'
  #     es_major_version: "6.x"
  #     es_version_lock: true
  #     es_xpack_features: []

  - role: fairdata-ansible-etsin-qvain
    vars:
      deploy_app_server: False
      deploy_data_server: True
      prepare_application: True
      deploy_application: True
      run_tests: False
      configure_proxy: False

      # Shared variables
      # ~~~~~~~~~~~~~~~~~~~~~
      instance_domain: '{{ fairdata_domain | default("fairdata.fi") }}'
      python_virtualenv_command: '{{ fairdata_python_virtualenv_command | default("virtualenv") }}'
      metax_qvain_api_password: '{{ metax_application_qvain_user_password | default("not_used") }}'
      metax_api_password: '{{ metax_application_etsin_user_password | default("not_used") }}'

      # Repository variables
      # ~~~~~~~~~~~~~~~~~~~~~
      repo_url_app: '{{ etsin_qvain_repo_url }}'
      repo_version_app: '{{ etsin_qvain_repo_version | default("master") }}'
      search_repo_url: '{{ etsin_search_repo_url }}'
      repo_version_data: '{{ etsin_search_repo_version | default("master") }}'

      # Secret key
      # ~~~~~~~~~~~~~~~~~~~~~
      secret_key: '{{ etsin_qvain_secret_key }}'

      # Mail variables
      # ~~~~~~~~~~~~~~~~~~~~~
      mail_server: '{{ etsin_qvain_mail_server }}'
      mail_port: '{{ etsin_qvain_mail_port }}'
      mail_username: '{{ etsin_qvain_mail_username }}'
      mail_password: '{{ etsin_qvain_mail_password }}'
      mail_default_sender: '{{ etsin_qvain_mail_default_sender }}'

      # App variables
      # ~~~~~~~~~~~~~~~~~~~~~
      app_hosts: '{{ etsin_qvain_app_hosts }}'

      # ElasticSearch variables
      # ~~~~~~~~~~~~~~~~~~~~~
      elasticsearch_hosts: '{{ etsin_qvain_elasticsearch_hosts | default("127.0.0.1") }}'
      elasticsearch_port: '{{ etsin_qvain_elasticsearch_port }}'
      elasticsearch_use_ssl: '{{ etsin_qvain_elasticsearch_use_ssl}}'

      # Metax RabbitMQ variables
      # ~~~~~~~~~~~~~~~~~~~~~
      metax_rabbitmq_hosts: '{{ etsin_qvain_metax_rabbitmq_hosts }}'
      metax_rabbitmq_port: '{{ etsin_qvain_metax_rabbitmq_port }}'
      metax_rabbitmq_vhost: '{{ etsin_qvain_metax_rabbitmq_vhost }}'
      metax_rabbitmq_exchange: '{{ etsin_qvain_metax_rabbitmq_exchange }}'
      metax_rabbitmq_user: '{{ etsin_qvain_metax_rabbitmq_user }}'
      metax_rabbitmq_password: '{{ etsin_qvain_metax_rabbitmq_password }}'

      # Metax API variables
      # ~~~~~~~~~~~~~~~~~~~~~
      metax_api_host: '{{ etsin_qvain_metax_api_host }}'
      metax_api_user: '{{ etsin_qvain_metax_api_user }}'
      metax_api_password: '{{ etsin_qvain_metax_api_password }}'
      metax_api_verify_ssl: '{{ etsin_qvain_metax_api_verify_ssl }}'

      # Metax Qvain API variables
      # ~~~~~~~~~~~~~~~~~~~~~
      metax_qvain_api_host: '{{ etsin_qvain_metax_qvain_api_host }}'
      metax_qvain_api_user: '{{ etsin_qvain_metax_qvain_api_user }}'
      metax_qvain_api_password: '{{ etsin_qvain_metax_qvain_api_password }}'
      metax_qvain_api_verify_ssl: '{{ etsin_qvain_metax_qvain_api_verify_ssl }}'

      # Download (V2) variables
      # ~~~~~~~~~~~~~~~~~~~~~
      download_api_v2_enabled: '{{ etsin_qvain_download_api_v2_enabled }}'
      download_api_v2_host: '{{ etsin_qvain_download_api_v2_host }}'
      download_api_v2_port: '{{ etsin_qvain_download_api_v2_port }}'
      download_api_v2_password: '{{ etsin_qvain_download_api_v2_password }}'
      download_api_v2_public_host: '{{ etsin_qvain_download_api_v2_public_host }}'
      download_api_v2_public_port: '{{ etsin_qvain_download_api_v2_public_port }}'

      # Memcached variables
      # ~~~~~~~~~~~~~~~~~~~~~
      memcached_host: '{{ etsin_qvain_memcached_host }}'
      memcached_port: '{{ etsin_qvain_memcached_port }}'

      # Rems
      # -----------------------
      fd_rems_enabled: '{{ etsin_qvain_fd_rems_enabled }}'
      fd_rems_host: '{{ etsin_qvain_fd_rems_host }}'
      fd_rems_api_key: '{{ etsin_qvain_fd_rems_api_key }}'

      # Fairdata SSO variables
      # ----------------------
      sso_key: '{{ etsin_qvain_sso_key | default("secret") }}'
      sso_enabled: '{{ etsin_qvain_sso_enabled }}'
      sso_prefix: '{{ etsin_qvain_sso_prefix }}'
      sso_host: '{{ etsin_qvain_sso_host }}'

      # Metrics URL
      # ----------------------
      matomo_url: '{{ etsin_qvain_matomo_url }}'

      # Flags
      # ----------------------
      flags: '{{ etsin_qvain_flags }}'

      # Nginx
      # ----------------------
      nginx_es_credentials_username: '{{ etsin_qvain_nginx_es_credentials_username }}'
      nginx_es_credentials_password: '{{ etsin_qvain_nginx_es_credentials_password }}'
